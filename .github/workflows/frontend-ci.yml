name: Frontend Continuous Integration

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REACT_APP_MOVIE_API_URL: http://localhost:5000

jobs:
  Lint:
    name: Linting Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'
          cache-dependency-path: "starter/frontend/package-lock.json"

      - name: Cache npm node_modules
        id: npm-cache 
        uses: actions/cache@v3
        with:
          path: ./starter/frontend/
          key: ${{ runner.os }}-node_modules-${{ hashFiles('./starter/frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node_modules-
    
      - name: Cache hit message
        if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo "Cache hit! Dependencies were restored from the cache."

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: ./starter/frontend
        run: npm ci

      - name: Run linting job
        run: cd starter/frontend && npm run lint
  Test:
    name: Test Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./starter/frontend/package-lock.json"

      - name: Cache npm node_modules
        id: npm-cache 
        uses: actions/cache@v3
        with:
          path: ./starter/frontend/
          key: ${{ runner.os }}-node_modules-${{ hashFiles('./starter/frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node_modules-
      
      - name: Cache hit message
        if: steps.npm-cache.outputs.cache-hit == 'true'
        run: echo "Cache hit! Dependencies were restored from the cache."

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: ./starter/frontend
        run: npm ci

      - name: Run test job
        run: cd starter/frontend && npm run test

  Build:
    needs: [Test, Lint]
    name: Build Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./starter/frontend/package-lock.json"

      - name: Build docker image
        run: |
          cd starter/frontend
          docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} --tag=mp-frontend:latest .

      - name: Run docker image
        run: |
          cd starter/frontend
          docker run -p 3000:3000 --name mp-frontend -d mp-frontend
